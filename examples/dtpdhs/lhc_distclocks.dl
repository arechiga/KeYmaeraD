{
 x : (C) -> Real,
 v : (C) -> Real,
 a : (C) -> Real,
 id : (C) -> Real, // ID number.
 e : (C) -> Real,
 n : () -> C,
 t : (C) -> Real
}
B > 0,
A > 0, 
eps > 0,
forall i : C. e(i) = 0 
|-
[
{
     // Delete a car.
     (n := *; ?(e(n) = 1); e(n) := 0)

     // Create a car.
 ++  (n := *; ?(e(n) = 0 & v(n) >= 0 & a(n) > -B & a(n) < A);
      e(n) := 1; id(n) := *; t(n) := 0;
        ?(forall l : C. 
          (e(l) = 1 & id(n) <= id(l) ==> 
            x(n) < x(l) & 
           (  
            (v(n) + a(n) * (eps() - t(n)) >= 0 & 
              2 * B() *  x(l)  > 2 *  B() * x(n) + v(n)^2 - v(l)^2 
                + (a(n) + B()) * (a(n) * (eps() - t(n) )^2 + 2 * (eps() - t(n) ) * v(n)))  |
             (v(n) + a(n) * (eps() - t(n)) <= 0  & 
              - 2 * B() * a(n) * x(n) + B() * v(n)^2 
              < - 2 * B() * a(n) * x(n) - a(n) * v(n)^2 )))))

    // Control a car.
 ++ (n := *; a(n) := *; t(n) := 0;
      ?(e(n) = 1 ==>
         a(n) > -B & a(n) < A & 
           (forall l : C. 
            (e(l) = 1 & id(n) <= id(l) ==> 
              x(n) < x(l) & 
              (
               (v(n) + a(n) * (eps() - t(n)) >= 0 & 
                2 * B() *  x(l)  > 2 *  B() * x(n) + v(n)^2 - v(l)^2 
                  + (a(n) + B()) * (a(n) * (eps() - t(n) )^2 + 2 * (eps() - t(n) ) * v(n)))  |
               (v(n) + a(n) * (eps() - t(n)) <= 0  & 
                 - 2 * B() * a(n) * x(n) + B() * v(n)^2 
                 < - 2 * B() * a(n) * x(n) - a(n) * v(n)^2 ))))))

    // Dynamics.
 ++ (
 forall i : C {x(i)' = v(i), 
               v(i)' = a(i), 
               t(i)' = 1; e(i) = 1 ==> (v(i) >= 0 &  t(i) <= eps) }
                         @solution( forall s . x(s, i) = (1/2)  *a(i) * s^2 + v(i) * s + x(i),
                                    forall s . v(s, i) = a(i) * s + v(i),
                                    forall s . t(s, i) = s + t(i) )
  )
}*
]
(
forall f : C. 
  forall l : C. 
   (e(f) = 1 & e(l) = 1 & id(f) < id(l) )  ==>
        x(f) < x(l)    
        )

